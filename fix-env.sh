#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}================================="
echo -e "AmneziaWG Easy - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ .env"
echo -e "=================================${NC}"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [[ ! -f ".env" ]]; then
    echo -e "${RED}‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./setup-env.sh –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
if ! grep -q "=random" .env; then
    echo -e "${GREEN}‚úÖ –í —Ñ–∞–π–ª–µ .env –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π 'random'${NC}"
    exit 0
fi

echo -e "${YELLOW}üîç –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è 'random' –≤ .env —Ñ–∞–π–ª–µ${NC}"
echo -e "${BLUE}üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è...${NC}"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
cp .env .env.backup
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: .env.backup${NC}"

# –§—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
generate_random_jc() { echo $((RANDOM % 10 + 1)); }
generate_random_size() { echo $((RANDOM % 100 + 50)); }
generate_random_header() { echo $((RANDOM % 1000000000 + 1000000000)); }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º WG_DEVICE
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...${NC}"
CURRENT_WG_DEVICE=$(grep "^WG_DEVICE=" .env | cut -d'=' -f2)
AUTO_WG_DEVICE=$(ip route get 8.8.8.8 | awk 'NR==1 {for(i=1;i<=NF;i++) if($i=="dev") print $(i+1)}')

if [[ -z "$AUTO_WG_DEVICE" ]]; then
    AUTO_WG_DEVICE=$(ip route | grep default | awk '{for(i=1;i<=NF;i++) if($i=="dev") print $(i+1)}' | head -1)
fi

if [[ -n "$AUTO_WG_DEVICE" && "$CURRENT_WG_DEVICE" != "$AUTO_WG_DEVICE" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –¢–µ–∫—É—â–∏–π WG_DEVICE: $CURRENT_WG_DEVICE${NC}"
    echo -e "${GREEN}üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $AUTO_WG_DEVICE${NC}"
    echo -e "${BLUE}üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:${NC}"
    ip -br addr show | grep -E "UP|UNKNOWN" | awk '{print "   " $1 " - " $3}' | head -5
    
    read -p "–û–±–Ω–æ–≤–∏—Ç—å WG_DEVICE –Ω–∞ $AUTO_WG_DEVICE? [y/N]: " UPDATE_DEVICE
    if [[ "$UPDATE_DEVICE" =~ ^[Yy]$ ]]; then
        sed -i "s/^WG_DEVICE=.*/WG_DEVICE=$AUTO_WG_DEVICE/" .env
        echo -e "${GREEN}‚úÖ WG_DEVICE: $CURRENT_WG_DEVICE ‚Üí $AUTO_WG_DEVICE${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ WG_DEVICE –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $CURRENT_WG_DEVICE${NC}"
fi

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
if grep -q "^JC=random" .env; then
    JC=$(generate_random_jc)
    sed -i "s/^JC=random/JC=$JC/" .env
    echo -e "${GREEN}‚úÖ JC: random ‚Üí $JC${NC}"
fi

if grep -q "^S1=random" .env; then
    S1=$(generate_random_size)
    sed -i "s/^S1=random/S1=$S1/" .env
    echo -e "${GREEN}‚úÖ S1: random ‚Üí $S1${NC}"
fi

if grep -q "^S2=random" .env; then
    S2=$(generate_random_size)
    sed -i "s/^S2=random/S2=$S2/" .env
    echo -e "${GREEN}‚úÖ S2: random ‚Üí $S2${NC}"
fi

if grep -q "^H1=random" .env; then
    H1=$(generate_random_header)
    sed -i "s/^H1=random/H1=$H1/" .env
    echo -e "${GREEN}‚úÖ H1: random ‚Üí $H1${NC}"
fi

if grep -q "^H2=random" .env; then
    H2=$(generate_random_header)
    sed -i "s/^H2=random/H2=$H2/" .env
    echo -e "${GREEN}‚úÖ H2: random ‚Üí $H2${NC}"
fi

if grep -q "^H3=random" .env; then
    H3=$(generate_random_header)
    sed -i "s/^H3=random/H3=$H3/" .env
    echo -e "${GREEN}‚úÖ H3: random ‚Üí $H3${NC}"
fi

if grep -q "^H4=random" .env; then
    H4=$(generate_random_header)
    sed -i "s/^H4=random/H4=$H4/" .env
    echo -e "${GREEN}‚úÖ H4: random ‚Üí $H4${NC}"
fi

echo
echo -e "${GREEN}üéâ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!${NC}"
echo
echo -e "${BLUE}üöÄ –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:${NC}"
echo -e "${YELLOW}   docker-compose down && docker-compose up -d${NC}"
echo
echo -e "${BLUE}üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
echo -e "${YELLOW}   diff .env.backup .env${NC}" 